version: "2"
services:
  varnish:
    build:
      context: varnish/
    environment:
      - VIRTUAL_HOST=magento2.docker
      - VIRTUAL_PORT=80
      - HTTPS_METHOD=noredirect
    ports:
      - 80
    links:
      - web

  web:
    build:
      context: nginx/
    ports:
      - 80
    links:
      - fpm
      - db
    volumes_from:
      - appdata
    env_file:
      - ./global.env
    #environment:
      #- VIRTUAL_HOST=magento2.docker
      #- VIRTUAL_PORT=80
      #- HTTPS_METHOD=noredirect

  fpm:
    hostname: fpm.magento2.docker
    build:
      context: 7.4-fpm/
    ports:
      - 9000
    links:
      - db
    volumes_from:
      - appdata
    env_file:
      - ./global.env

  db:
    image: mariadb:${MARIADB_VERSION}
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./src/mariadb_data1:/var/lib/mysql
      - ./src/mariadb_log1:/var/log/mysql
    ports:
      - 3306:3306

  cli:
    hostname: cli.magento2.docker
    build:
      context: 7.4-cli/
    links:
      - db
    volumes:
      - ~/.composer/cache:/root/.composer/cache
    volumes_from:
      - appdata
    env_file:
      - ./global.env
      - ./composer.env
    environment:
      - M2SETUP_INSTALL_DB=true
      - M2SETUP_DB_HOST=db
      - M2SETUP_DB_NAME=magento
      - M2SETUP_DB_USER=magento
      - M2SETUP_DB_PASSWORD=magento
      - M2SETUP_BASE_URL=http://magento2.docker/
      # - M2SETUP_SECURE_BASE_URL=https://magento2.docker/
      - M2SETUP_BACKEND_FRONTNAME=admin
      - M2SETUP_ADMIN_FIRSTNAME=Admin
      - M2SETUP_ADMIN_LASTNAME=User
      - M2SETUP_ADMIN_EMAIL=dummy@gmail.com
      - M2SETUP_ADMIN_USER=admin
      - M2SETUP_ADMIN_PASSWORD=password1
      - M2SETUP_VERSION=2.4.*
      # - M2SETUP_USE_SAMPLE_DATA=true

  cron:
    build:
      context: 7.4-cli/
    hostname: magento2-cron.docker
    command: run-cron
    environment:
      - ENABLE_SENDMAIL=true
    volumes_from:
      - appdata
    links:
      - db

  elasticsearch1:
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    environment:
      - cluster.name=es-cluster
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
      - cluster.initial_master_nodes=elasticsearch1
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./src/es_data1:/usr/share/elasticsearch/data
      - ./src/es_log1:/var/log/elasticsearch

  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - 15672:15672
      - 5672:5672

  appdata:
    image: tianon/true
    volumes:
      - ./magento:/var/www/magento

  dbdata:
    image: tianon/true
    volumes:
      - /var/lib/mysql
